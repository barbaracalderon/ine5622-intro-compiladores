
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATRIBUICAO BREAK CALL DEF DIFERENTE DIVISAO ELSE FLOAT FLOAT_CONSTANT FOR IDENT IF IGUAL INT INT_CONSTANT LCHAVES LCOLCHETES LPAREN MAIOR MAIORIGUAL MENOR MENORIGUAL MULTIPLICACAO NEW NULL PONTO_VIRGULA PRINT RCHAVES RCOLCHETES READ RESTO RETURN RPAREN SOMA STRING STRING_CONSTANT SUBTRACAO VIRGULA\n    program : statement\n                | funclist\n                | epsilon\n    \n    funclist : funcdef funclist2\n    \n    funclist2 : funclist\n                | epsilon\n    \n    funcdef : DEF IDENT LPAREN paramlist RPAREN LCHAVES statelist RCHAVES\n    \n    paramlist : INT IDENT paramlist2\n                | FLOAT IDENT paramlist2\n                | STRING IDENT paramlist2\n                | epsilon\n    \n    paramlist2 : VIRGULA paramlist\n                    | epsilon\n    \n    statement : vardecl PONTO_VIRGULA\n                | atribstat PONTO_VIRGULA\n                | printstat PONTO_VIRGULA\n                | readstat PONTO_VIRGULA\n                | returnstat PONTO_VIRGULA\n                | ifstat\n                | forstat\n                | LCHAVES statelist RCHAVES\n                | BREAK PONTO_VIRGULA\n                | PONTO_VIRGULA\n    \n    vardecl :   INT IDENT a\n                | FLOAT IDENT a\n                | STRING IDENT a\n    \n    a   :   LCOLCHETES INT_CONSTANT RCOLCHETES a\n            | epsilon\n    \n    atribstat   :   lvalue ATRIBUICAO atribstat2\n    \n    atribstat2 :    expression\n                    | allocexpression\n                    | funccall\n    \n    funccall :  CALL IDENT LPAREN paramlistcall RPAREN\n    \n    paramlistcall   :   IDENT paramlistcall2\n                        | epsilon\n    \n    paramlistcall2  :   VIRGULA paramlistcall\n                        | epsilon\n    \n    printstat   :   PRINT expression\n    \n    readstat    :   READ lvalue\n    \n    returnstat  :   RETURN\n    \n    ifstat  :   IF LPAREN expression RPAREN statement ifstat2\n    \n    ifstat2 :   ELSE statement PONTO_VIRGULA\n                | PONTO_VIRGULA\n    \n    forstat :   FOR LPAREN atribstat PONTO_VIRGULA expression PONTO_VIRGULA atribstat RPAREN statement\n    \n    statelist :    statement statelist2\n    \n    statelist2  :   statelist\n                    | epsilon\n    \n    allocexpression :   NEW allocexpression2\n    \n    allocexpression2    :   INT e\n                            | FLOAT e\n                            | STRING e\n    \n    e   :   LCOLCHETES numexpression RCOLCHETES e2\n    \n    e2  :   e\n            | epsilon\n    \n    expression  :   numexpression expression2\n    \n    expression2 : MENOR numexpression\n                    | MAIOR numexpression\n                    | MENORIGUAL numexpression\n                    | MAIORIGUAL numexpression\n                    | IGUAL numexpression\n                    | DIFERENTE numexpression\n                    | epsilon\n    \n    numexpression   :   term d\n    \n    d   :   SOMA term d\n            | SUBTRACAO term d\n            | epsilon\n    \n    term    :   unaryexpr b\n    \n    b   :   MULTIPLICACAO unaryexpr b\n            | DIVISAO unaryexpr b\n            | RESTO unaryexpr b\n            | epsilon\n    \n    unaryexpr   :   SOMA factor\n                    | SUBTRACAO factor\n                    | factor\n    \n    factor  :   INT_CONSTANT\n                | FLOAT_CONSTANT\n                | STRING_CONSTANT\n                | NULL\n                | lvalue\n                | LPAREN numexpression RPAREN\n    \n    lvalue  :   IDENT c\n    \n    c   :   LCOLCHETES numexpression RCOLCHETES c\n            | epsilon\n    epsilon :'
    
_lr_action_items = {'LCHAVES':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,141,150,151,152,154,173,174,176,],[13,-23,-19,-20,13,-14,-15,-16,-17,-18,13,-22,-21,13,154,-41,13,-43,13,-42,13,-44,]),'BREAK':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[14,-23,-19,-20,14,-14,-15,-16,-17,-18,14,-22,-21,14,-41,14,-43,14,-42,14,-44,]),'PONTO_VIRGULA':([0,5,6,7,8,9,10,11,12,13,14,17,23,27,28,29,30,31,33,34,38,39,41,42,43,45,46,47,48,50,52,53,54,55,56,58,62,66,68,70,71,72,73,74,75,78,85,86,89,90,94,95,96,99,102,103,108,109,110,111,112,113,114,115,116,117,118,119,120,127,128,129,131,132,134,135,136,137,138,139,140,145,150,151,152,154,160,164,165,169,170,171,173,174,176,],[6,27,-23,28,29,30,31,-19,-20,6,34,-84,-40,-14,-15,-16,-17,-18,6,-22,-84,-81,-83,-84,-84,-38,-84,-84,-84,-74,-75,-76,-77,-78,-79,-39,-21,-24,-28,-25,-26,-29,-30,-31,-32,-55,-62,-63,-66,-67,-71,-72,-73,121,-84,-48,-56,-57,-58,-59,-60,-61,-84,-84,-84,-84,-84,-80,6,-84,-82,-49,-50,-51,-64,-65,-68,-69,-70,152,153,-27,-41,6,-43,6,-84,-33,173,-52,-53,-54,-42,6,-44,]),'$end':([0,1,2,3,4,6,11,12,15,27,28,29,30,31,34,35,36,37,62,150,152,173,175,176,],[-84,0,-1,-2,-3,-23,-19,-20,-84,-14,-15,-16,-17,-18,-22,-4,-5,-6,-21,-41,-43,-42,-7,-44,]),'INT':([0,6,11,12,13,27,28,29,30,31,33,34,62,76,100,120,150,151,152,154,156,173,174,176,],[16,-23,-19,-20,16,-14,-15,-16,-17,-18,16,-22,-21,104,123,16,-41,16,-43,16,123,-42,16,-44,]),'FLOAT':([0,6,11,12,13,27,28,29,30,31,33,34,62,76,100,120,150,151,152,154,156,173,174,176,],[18,-23,-19,-20,18,-14,-15,-16,-17,-18,18,-22,-21,105,124,18,-41,18,-43,18,124,-42,18,-44,]),'STRING':([0,6,11,12,13,27,28,29,30,31,33,34,62,76,100,120,150,151,152,154,156,173,174,176,],[19,-23,-19,-20,19,-14,-15,-16,-17,-18,19,-22,-21,106,125,19,-41,19,-43,19,125,-42,19,-44,]),'PRINT':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[21,-23,-19,-20,21,-14,-15,-16,-17,-18,21,-22,-21,21,-41,21,-43,21,-42,21,-44,]),'READ':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[22,-23,-19,-20,22,-14,-15,-16,-17,-18,22,-22,-21,22,-41,22,-43,22,-42,22,-44,]),'RETURN':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[23,-23,-19,-20,23,-14,-15,-16,-17,-18,23,-22,-21,23,-41,23,-43,23,-42,23,-44,]),'IF':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[24,-23,-19,-20,24,-14,-15,-16,-17,-18,24,-22,-21,24,-41,24,-43,24,-42,24,-44,]),'FOR':([0,6,11,12,13,27,28,29,30,31,33,34,62,120,150,151,152,154,173,174,176,],[25,-23,-19,-20,25,-14,-15,-16,-17,-18,25,-22,-21,25,-41,25,-43,25,-42,25,-44,]),'DEF':([0,15,175,],[26,26,-7,]),'IDENT':([0,6,11,12,13,16,18,19,21,22,26,27,28,29,30,31,33,34,40,44,49,51,57,59,60,62,77,79,80,81,82,83,84,87,88,91,92,93,120,121,123,124,125,130,133,150,151,152,153,154,162,173,174,176,],[17,-23,-19,-20,17,38,42,43,17,17,61,-14,-15,-16,-17,-18,17,-22,17,17,17,17,17,17,17,-21,107,17,17,17,17,17,17,17,17,17,17,17,17,17,142,143,144,17,147,-41,17,-43,17,17,147,-42,17,-44,]),'RCHAVES':([6,11,12,27,28,29,30,31,32,33,34,62,63,64,65,150,152,167,173,176,],[-23,-19,-20,-14,-15,-16,-17,-18,62,-84,-22,-21,-45,-46,-47,-41,-43,175,-42,-44,]),'ELSE':([6,11,12,27,28,29,30,31,34,62,139,150,152,173,176,],[-23,-19,-20,-14,-15,-16,-17,-18,-22,-21,151,-41,-43,-42,-44,]),'LCOLCHETES':([17,38,42,43,102,104,105,106,127,160,],[40,67,67,67,40,130,130,130,67,130,]),'ATRIBUICAO':([17,20,39,41,102,128,],[-84,44,-81,-83,-84,-82,]),'MULTIPLICACAO':([17,39,41,48,50,52,53,54,55,56,95,96,102,116,117,118,119,128,],[-84,-81,-83,91,-74,-75,-76,-77,-78,-79,-72,-73,-84,91,91,91,-80,-82,]),'DIVISAO':([17,39,41,48,50,52,53,54,55,56,95,96,102,116,117,118,119,128,],[-84,-81,-83,92,-74,-75,-76,-77,-78,-79,-72,-73,-84,92,92,92,-80,-82,]),'RESTO':([17,39,41,48,50,52,53,54,55,56,95,96,102,116,117,118,119,128,],[-84,-81,-83,93,-74,-75,-76,-77,-78,-79,-72,-73,-84,93,93,93,-80,-82,]),'SOMA':([17,21,39,40,41,44,47,48,50,52,53,54,55,56,57,59,79,80,81,82,83,84,87,88,90,91,92,93,94,95,96,102,114,115,116,117,118,119,121,128,130,136,137,138,],[-84,49,-81,49,-83,49,87,-84,-74,-75,-76,-77,-78,-79,49,49,49,49,49,49,49,49,49,49,-67,49,49,49,-71,-72,-73,-84,87,87,-84,-84,-84,-80,49,-82,49,-68,-69,-70,]),'SUBTRACAO':([17,21,39,40,41,44,47,48,50,52,53,54,55,56,57,59,79,80,81,82,83,84,87,88,90,91,92,93,94,95,96,102,114,115,116,117,118,119,121,128,130,136,137,138,],[-84,51,-81,51,-83,51,88,-84,-74,-75,-76,-77,-78,-79,51,51,51,51,51,51,51,51,51,51,-67,51,51,51,-71,-72,-73,-84,88,88,-84,-84,-84,-80,51,-82,51,-68,-69,-70,]),'MENOR':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,79,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'MAIOR':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,80,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'MENORIGUAL':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,81,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'MAIORIGUAL':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,82,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'IGUAL':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,83,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'DIFERENTE':([17,39,41,46,47,48,50,52,53,54,55,56,86,89,90,94,95,96,102,114,115,116,117,118,119,128,134,135,136,137,138,],[-84,-81,-83,84,-84,-84,-74,-75,-76,-77,-78,-79,-63,-66,-67,-71,-72,-73,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,]),'RCOLCHETES':([17,39,41,47,48,50,52,53,54,55,56,69,86,89,90,94,95,96,101,102,114,115,116,117,118,119,128,134,135,136,137,138,146,],[-84,-81,-83,-84,-84,-74,-75,-76,-77,-78,-79,102,-63,-66,-67,-71,-72,-73,127,-84,-84,-84,-84,-84,-84,-80,-82,-64,-65,-68,-69,-70,160,]),'RPAREN':([17,39,41,46,47,48,50,52,53,54,55,56,72,73,74,75,78,85,86,89,90,94,95,96,97,98,100,102,103,108,109,110,111,112,113,114,115,116,117,118,119,122,126,128,129,131,132,133,134,135,136,137,138,142,143,144,147,148,149,155,156,157,158,159,160,161,162,163,164,166,168,169,170,171,172,],[-84,-81,-83,-84,-84,-84,-74,-75,-76,-77,-78,-79,-29,-30,-31,-32,-55,-62,-63,-66,-67,-71,-72,-73,119,120,-84,-84,-48,-56,-57,-58,-59,-60,-61,-84,-84,-84,-84,-84,-80,141,-11,-82,-49,-50,-51,-84,-64,-65,-68,-69,-70,-84,-84,-84,-84,164,-35,-8,-84,-13,-9,-10,-84,-34,-84,-37,-33,174,-12,-52,-53,-54,-36,]),'INT_CONSTANT':([21,40,44,49,51,57,59,67,79,80,81,82,83,84,87,88,91,92,93,121,130,],[52,52,52,52,52,52,52,101,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FLOAT_CONSTANT':([21,40,44,49,51,57,59,79,80,81,82,83,84,87,88,91,92,93,121,130,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'STRING_CONSTANT':([21,40,44,49,51,57,59,79,80,81,82,83,84,87,88,91,92,93,121,130,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NULL':([21,40,44,49,51,57,59,79,80,81,82,83,84,87,88,91,92,93,121,130,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LPAREN':([21,24,25,40,44,49,51,57,59,61,79,80,81,82,83,84,87,88,91,92,93,107,121,130,],[57,59,60,57,57,57,57,57,57,100,57,57,57,57,57,57,57,57,57,57,57,133,57,57,]),'NEW':([44,],[76,]),'CALL':([44,],[77,]),'VIRGULA':([142,143,144,147,],[156,156,156,162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,13,33,120,151,154,174,],[2,33,33,139,165,33,176,]),'funclist':([0,15,],[3,36,]),'epsilon':([0,15,17,33,38,42,43,46,47,48,100,102,114,115,116,117,118,127,133,142,143,144,147,156,160,162,],[4,37,41,65,68,68,68,85,89,94,126,41,89,89,94,94,94,68,149,157,157,157,163,126,171,149,]),'vardecl':([0,13,33,120,151,154,174,],[5,5,5,5,5,5,5,]),'atribstat':([0,13,33,60,120,151,153,154,174,],[7,7,7,99,7,7,166,7,7,]),'printstat':([0,13,33,120,151,154,174,],[8,8,8,8,8,8,8,]),'readstat':([0,13,33,120,151,154,174,],[9,9,9,9,9,9,9,]),'returnstat':([0,13,33,120,151,154,174,],[10,10,10,10,10,10,10,]),'ifstat':([0,13,33,120,151,154,174,],[11,11,11,11,11,11,11,]),'forstat':([0,13,33,120,151,154,174,],[12,12,12,12,12,12,12,]),'funcdef':([0,15,],[15,15,]),'lvalue':([0,13,21,22,33,40,44,49,51,57,59,60,79,80,81,82,83,84,87,88,91,92,93,120,121,130,151,153,154,174,],[20,20,56,58,20,56,56,56,56,56,56,20,56,56,56,56,56,56,56,56,56,56,56,20,56,56,20,20,20,20,]),'statelist':([13,33,154,],[32,64,167,]),'funclist2':([15,],[35,]),'c':([17,102,],[39,128,]),'expression':([21,44,59,121,],[45,73,98,140,]),'numexpression':([21,40,44,57,59,79,80,81,82,83,84,121,130,],[46,69,46,97,46,108,109,110,111,112,113,46,146,]),'term':([21,40,44,57,59,79,80,81,82,83,84,87,88,121,130,],[47,47,47,47,47,47,47,47,47,47,47,114,115,47,47,]),'unaryexpr':([21,40,44,57,59,79,80,81,82,83,84,87,88,91,92,93,121,130,],[48,48,48,48,48,48,48,48,48,48,48,48,48,116,117,118,48,48,]),'factor':([21,40,44,49,51,57,59,79,80,81,82,83,84,87,88,91,92,93,121,130,],[50,50,50,95,96,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'statelist2':([33,],[63,]),'a':([38,42,43,127,],[66,70,71,145,]),'atribstat2':([44,],[72,]),'allocexpression':([44,],[74,]),'funccall':([44,],[75,]),'expression2':([46,],[78,]),'d':([47,114,115,],[86,134,135,]),'b':([48,116,117,118,],[90,136,137,138,]),'allocexpression2':([76,],[103,]),'paramlist':([100,156,],[122,168,]),'e':([104,105,106,160,],[129,131,132,170,]),'paramlistcall':([133,162,],[148,172,]),'ifstat2':([139,],[150,]),'paramlist2':([142,143,144,],[155,158,159,]),'paramlistcall2':([147,],[161,]),'e2':([160,],[169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','sintatica.py',7),
  ('program -> funclist','program',1,'p_program','sintatica.py',8),
  ('program -> epsilon','program',1,'p_program','sintatica.py',9),
  ('funclist -> funcdef funclist2','funclist',2,'p_funclist','sintatica.py',14),
  ('funclist2 -> funclist','funclist2',1,'p_funclist2','sintatica.py',19),
  ('funclist2 -> epsilon','funclist2',1,'p_funclist2','sintatica.py',20),
  ('funcdef -> DEF IDENT LPAREN paramlist RPAREN LCHAVES statelist RCHAVES','funcdef',8,'p_funcdef','sintatica.py',25),
  ('paramlist -> INT IDENT paramlist2','paramlist',3,'p_paramlist','sintatica.py',30),
  ('paramlist -> FLOAT IDENT paramlist2','paramlist',3,'p_paramlist','sintatica.py',31),
  ('paramlist -> STRING IDENT paramlist2','paramlist',3,'p_paramlist','sintatica.py',32),
  ('paramlist -> epsilon','paramlist',1,'p_paramlist','sintatica.py',33),
  ('paramlist2 -> VIRGULA paramlist','paramlist2',2,'p_paramlist2','sintatica.py',38),
  ('paramlist2 -> epsilon','paramlist2',1,'p_paramlist2','sintatica.py',39),
  ('statement -> vardecl PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',44),
  ('statement -> atribstat PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',45),
  ('statement -> printstat PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',46),
  ('statement -> readstat PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',47),
  ('statement -> returnstat PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',48),
  ('statement -> ifstat','statement',1,'p_statement','sintatica.py',49),
  ('statement -> forstat','statement',1,'p_statement','sintatica.py',50),
  ('statement -> LCHAVES statelist RCHAVES','statement',3,'p_statement','sintatica.py',51),
  ('statement -> BREAK PONTO_VIRGULA','statement',2,'p_statement','sintatica.py',52),
  ('statement -> PONTO_VIRGULA','statement',1,'p_statement','sintatica.py',53),
  ('vardecl -> INT IDENT a','vardecl',3,'p_vardecl','sintatica.py',58),
  ('vardecl -> FLOAT IDENT a','vardecl',3,'p_vardecl','sintatica.py',59),
  ('vardecl -> STRING IDENT a','vardecl',3,'p_vardecl','sintatica.py',60),
  ('a -> LCOLCHETES INT_CONSTANT RCOLCHETES a','a',4,'p_a','sintatica.py',65),
  ('a -> epsilon','a',1,'p_a','sintatica.py',66),
  ('atribstat -> lvalue ATRIBUICAO atribstat2','atribstat',3,'p_atribstat','sintatica.py',71),
  ('atribstat2 -> expression','atribstat2',1,'p_atribstat2','sintatica.py',77),
  ('atribstat2 -> allocexpression','atribstat2',1,'p_atribstat2','sintatica.py',78),
  ('atribstat2 -> funccall','atribstat2',1,'p_atribstat2','sintatica.py',79),
  ('funccall -> CALL IDENT LPAREN paramlistcall RPAREN','funccall',5,'p_funccall','sintatica.py',84),
  ('paramlistcall -> IDENT paramlistcall2','paramlistcall',2,'p_paramlistcall','sintatica.py',90),
  ('paramlistcall -> epsilon','paramlistcall',1,'p_paramlistcall','sintatica.py',91),
  ('paramlistcall2 -> VIRGULA paramlistcall','paramlistcall2',2,'p_paramlistcall2','sintatica.py',96),
  ('paramlistcall2 -> epsilon','paramlistcall2',1,'p_paramlistcall2','sintatica.py',97),
  ('printstat -> PRINT expression','printstat',2,'p_printstat','sintatica.py',102),
  ('readstat -> READ lvalue','readstat',2,'p_readstat','sintatica.py',107),
  ('returnstat -> RETURN','returnstat',1,'p_returnstat','sintatica.py',112),
  ('ifstat -> IF LPAREN expression RPAREN statement ifstat2','ifstat',6,'p_ifstat','sintatica.py',117),
  ('ifstat2 -> ELSE statement PONTO_VIRGULA','ifstat2',3,'p_ifstat2','sintatica.py',122),
  ('ifstat2 -> PONTO_VIRGULA','ifstat2',1,'p_ifstat2','sintatica.py',123),
  ('forstat -> FOR LPAREN atribstat PONTO_VIRGULA expression PONTO_VIRGULA atribstat RPAREN statement','forstat',9,'p_forstat','sintatica.py',128),
  ('statelist -> statement statelist2','statelist',2,'p_statelist','sintatica.py',133),
  ('statelist2 -> statelist','statelist2',1,'p_statelist2','sintatica.py',138),
  ('statelist2 -> epsilon','statelist2',1,'p_statelist2','sintatica.py',139),
  ('allocexpression -> NEW allocexpression2','allocexpression',2,'p_allocexpression','sintatica.py',144),
  ('allocexpression2 -> INT e','allocexpression2',2,'p_allocexpression2','sintatica.py',149),
  ('allocexpression2 -> FLOAT e','allocexpression2',2,'p_allocexpression2','sintatica.py',150),
  ('allocexpression2 -> STRING e','allocexpression2',2,'p_allocexpression2','sintatica.py',151),
  ('e -> LCOLCHETES numexpression RCOLCHETES e2','e',4,'p_e','sintatica.py',156),
  ('e2 -> e','e2',1,'p_e2','sintatica.py',161),
  ('e2 -> epsilon','e2',1,'p_e2','sintatica.py',162),
  ('expression -> numexpression expression2','expression',2,'p_expression','sintatica.py',167),
  ('expression2 -> MENOR numexpression','expression2',2,'p_expression2','sintatica.py',172),
  ('expression2 -> MAIOR numexpression','expression2',2,'p_expression2','sintatica.py',173),
  ('expression2 -> MENORIGUAL numexpression','expression2',2,'p_expression2','sintatica.py',174),
  ('expression2 -> MAIORIGUAL numexpression','expression2',2,'p_expression2','sintatica.py',175),
  ('expression2 -> IGUAL numexpression','expression2',2,'p_expression2','sintatica.py',176),
  ('expression2 -> DIFERENTE numexpression','expression2',2,'p_expression2','sintatica.py',177),
  ('expression2 -> epsilon','expression2',1,'p_expression2','sintatica.py',178),
  ('numexpression -> term d','numexpression',2,'p_numexpression','sintatica.py',184),
  ('d -> SOMA term d','d',3,'p_d','sintatica.py',189),
  ('d -> SUBTRACAO term d','d',3,'p_d','sintatica.py',190),
  ('d -> epsilon','d',1,'p_d','sintatica.py',191),
  ('term -> unaryexpr b','term',2,'p_term','sintatica.py',196),
  ('b -> MULTIPLICACAO unaryexpr b','b',3,'p_b','sintatica.py',201),
  ('b -> DIVISAO unaryexpr b','b',3,'p_b','sintatica.py',202),
  ('b -> RESTO unaryexpr b','b',3,'p_b','sintatica.py',203),
  ('b -> epsilon','b',1,'p_b','sintatica.py',204),
  ('unaryexpr -> SOMA factor','unaryexpr',2,'p_unaryexpr','sintatica.py',209),
  ('unaryexpr -> SUBTRACAO factor','unaryexpr',2,'p_unaryexpr','sintatica.py',210),
  ('unaryexpr -> factor','unaryexpr',1,'p_unaryexpr','sintatica.py',211),
  ('factor -> INT_CONSTANT','factor',1,'p_factor','sintatica.py',216),
  ('factor -> FLOAT_CONSTANT','factor',1,'p_factor','sintatica.py',217),
  ('factor -> STRING_CONSTANT','factor',1,'p_factor','sintatica.py',218),
  ('factor -> NULL','factor',1,'p_factor','sintatica.py',219),
  ('factor -> lvalue','factor',1,'p_factor','sintatica.py',220),
  ('factor -> LPAREN numexpression RPAREN','factor',3,'p_factor','sintatica.py',221),
  ('lvalue -> IDENT c','lvalue',2,'p_lvalue','sintatica.py',226),
  ('c -> LCOLCHETES numexpression RCOLCHETES c','c',4,'p_c','sintatica.py',231),
  ('c -> epsilon','c',1,'p_c','sintatica.py',232),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','sintatica.py',237),
]
